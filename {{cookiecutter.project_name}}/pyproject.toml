{{'[tool.poetry]' if cookiecutter.dependency_manager != 'pip' else '[project]'}}
name = "{{cookiecutter.project_name}}"
version = "0.0.0"
description = "{{cookiecutter.project_description}}"
authors = [
    {{"{{cookiecutter.author_name}} <{{cookiecutter.email}}>", if cookiecutter.dependency_manager != 'pip' else '{name = "{{cookiecutter.author_name}}", email = "{{cookiecutter.email}}"},'}}
]
readme = "README.md"{{'\nlicense = "MIT"' if cookiecutter.open_source == "y" else ""}}
{{'\n[tool.poetry.dependencies]' if cookiecutter.dependency_manager != 'pip' else ''}}
{{'python' if cookiecutter.dependency_manager != 'pip' else 'requires-python'}} = ">={{
cookiecutter.python_version }},<3.13"{{'\ndependencies = [' if cookiecutter.dependency_manager != 'pip' else ''}}
{{'hydra-core = "^1.3.2"' if cookiecutter.dependency_manager != 'pip' else ' "hydra-core>=1.3.2,<2.0.0",'}}

{{'[tool.poetry.group.dev.dependencies]' if cookiecutter.dependency_manager != 'pip' else '[project.optional-dependencies]\ndev = ['}}
pytest = "^7.4.2"
pytest-xdist = "^3.3.1"
pytest-cov = "^4.1.0"
pre-commit = "^3.4.0"
pdoc = "^14.0.1"
readme-coverage-badger = ">=0.1.2,<1.0.0"
click = "^8.1.7"
{{'\n[[tool.poetry.source]]\nname = "pypi"' if cookiecutter.dependency_manager != 'pip' else ''}}
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    '--verbose',
    '--durations=10',
    '--color=yes',
    '-s',
    '-vv',
    '--doctest-modules',
    '--cov=src/{{cookiecutter.project_name}}',
    '-n 2',
]
xfail_strict = true
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::ImportWarning",
]
log_cli_level = "info"
testpaths = ["tests", "src/{{cookiecutter.project_name}}"]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
	\.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| _build
| buck-out
| build
)/
'''

[tool.ruff]
target-version = "{{'py312' if cookiecutter.python_version == '3.12' else ''}}{{'py311' if cookiecutter.python_version == '3.11' else ''}}{{'py310' if cookiecutter.python_version == '3.10' else ''}}{{'py39' if cookiecutter.python_version == '3.9' else ''}}{{'py38' if cookiecutter.python_version == '3.8' else ''}}{{'py37' if cookiecutter.python_version == '3.7' else ''}}"
extend-select = ["I"]  #Â Enable the `isort` rules for sorting imports

[tool.ruff.extend-per-file-ignores]
"__init__.py" = ["F401"]

[build-system]
requires = ["{{'poetry-core>=1.0.0' if cookiecutter.dependency_manager != 'pip' else 'setuptools>=68.0.0'}}"]
build-backend = "{{'poetry.core.masonry.api' if cookiecutter.dependency_manager != 'pip' else 'setuptools.build_meta'}}"
