name: CI

on:
  pull_request:
    branches:
      - main

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: jpetrucciani/black-check@master

  pytest:
    strategy:
        matrix:
            os: [{{'windows-latest, macos-latest, ' if cookiecutter.open_source == 'y' else ''}}ubuntu-latest]
            python-version: ["{{ cookiecutter.python_version }}"]
    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    steps:
      - uses: actions/checkout@v3
{{'\n      - name: Install Poetry\n        run: pip3 install poetry==1.5.1\n\n' if cookiecutter.dependency_manager != 'pip' else ''}}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}
          cache: {{'"poetry"' if dependency_manager != 'pip' else 'pip'}}

      - name: Install Dependencies
        run: |
          {{'poetry env use ' if cookiecutter.dependency_manager != 'pip' else 'python'}}{% raw %}"${{ matrix.python-version }}"{% endraw %}{{'' if cookiecutter.dependency_manager != 'pip' else ' -m venv .venv'}}
          {{'poetry install --no-interaction --no-cache' if cookiecutter.dependency_manager != 'pip' else '. .venv/bin/activate && pip install .[dev]'}}

      - name: Test with pytest
        run: {{'poetry run' if cookiecutter.dependency_manager != 'pip' else '. .venv/bin/activate && python -m'}} pytest --dist no -n 0
